# Copyright © 2025 Niklas Haas
# Copyright © 2024, Marvin Scholz
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

project('checkasm', ['c', 'nasm'],
  version: '1.0.0',
  default_options: ['c_std=c11',
                    'buildtype=debugoptimized',
                    'b_ndebug=if-release',
                    'warning_level=2'],
  meson_version : '>=1.0.0')

# Project arguments and basic checks
cc = meson.get_compiler('c')

test_args = []
if host_machine.system() in ['linux', 'gnu', 'emscripten']
  add_project_arguments('-D_GNU_SOURCE', language: 'c')
  test_args += '-D_GNU_SOURCE'
endif

if get_option('b_sanitize') == 'memory'
  error('asm causes false positives with the memory sanitizer.')
endif

if cc.has_argument('-fvisibility=hidden')
    add_project_arguments('-fvisibility=hidden', language: 'c')
else
    warning('Compiler does not support -fvisibility=hidden, all symbols will be public!')
endif

# Global paths
checkasm_src_root = meson.current_source_dir()
checkasm_inc_dirs = include_directories(['.', 'include/checkasm', 'include'])

# Global platform flags
arch_aarch64     = host_machine.cpu_family() == 'aarch64' or host_machine.cpu() == 'arm64'
arch_arm         = host_machine.cpu_family().startswith('arm') and host_machine.cpu() != 'arm64'
arch_x86         = host_machine.cpu_family().startswith('x86')
arch_x86_64      = host_machine.cpu_family() == 'x86_64'
arch_x86_32      = host_machine.cpu_family() == 'x86'
arch_ppc64le     = host_machine.cpu() == 'ppc64le'
arch_riscv       = host_machine.cpu_family().startswith('riscv')
arch_rv32        = host_machine.cpu_family() == 'riscv32'
arch_rv64        = host_machine.cpu_family() == 'riscv64'
arch_loongarch   = host_machine.cpu_family().startswith('loongarch')
arch_loongarch32 = host_machine.cpu_family() == 'loongarch32'
arch_loongarch64 = host_machine.cpu_family() == 'loongarch64'

subdir('include/checkasm')
subdir('src')
subdir('tests')

meson.override_dependency(meson.project_name(), checkasm_dep)
